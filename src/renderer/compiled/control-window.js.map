{
    "version": 3,
    "file": "control-window.js",
    "sources": [
        "../control-window/core/core.module.js",
        "../control-window/projection-control/projection-control.module.js",
        "../control-window/control-window.js",
        "../control-window/core/models/image-for-projection.mdl.js",
        "../control-window/projection-control/configuration-panel/configuration-panel.component.js",
        "../control-window/projection-control/configuration-panel/configuration-panel.controller.js",
        "../control-window/projection-control/image-preview/image-preview.component.js",
        "../control-window/projection-control/image-preview/image-preview.controller.js",
        "../control-window/projection-control/image-thumbnails/image-thumbnails.component.js",
        "../control-window/projection-control/image-thumbnails/image-thumbnails.controller.js",
        "../control-window/projection-control/projection-control.component.js",
        "../control-window/projection-control/projection-control.controller.js",
        "../control-window/projection-control/projection-control.svc.js"
    ],
    "names": [
        "angular",
        "module",
        "constant",
        "Set",
        "decorator",
        "decorateRootScope",
        "$delegate",
        "__proto__",
        "safeApply",
        "safeApplyChange",
        "expression",
        "$$phase",
        "$evalAsync",
        "$apply",
        "factory",
        "ImageForProjectionModel",
        "equals",
        "expected",
        "actual",
        "areEqual",
        "src",
        "makeImageForProjection",
        "file",
        "path",
        "normalize",
        "preset",
        "component",
        "controller",
        "templateUrl",
        "ConfigurationPanelCtrl",
        "$scope",
        "ProjectionControlService",
        "vm",
        "ipcRenderer",
        "electron",
        "isProjectionEnabled",
        "ctrlPnlSvcData",
        "data",
        "objectFitOptions",
        "label",
        "value",
        "positionPresets",
        "objectFitPreset",
        "toggleProjection",
        "imagePositionPresetChanged",
        "send",
        "once",
        "imageProjected",
        "length",
        "objectPosition",
        "ImagePreviewCtrl",
        "$element",
        "screenFrameElm",
        "$onInit",
        "canvasHeight",
        "querySelector",
        "_handleCanvasDimensionChange",
        "canvasDimensions",
        "height",
        "originalHeight",
        "width",
        "originalWidth",
        "offsetWidth",
        "canvasWidth",
        "offsetHeight",
        "$on",
        "on",
        "event",
        "ImageThumbnailsCtrl",
        "element",
        "projectionCtrlSvc",
        "imagesToProject",
        "$postLink",
        "removeImageForProjection",
        "thumbnailClicked",
        "_setUpScrollWheelHelper",
        "scrollableAreaElement",
        "addEventListener",
        "wheelEventForElement",
        "deltaY",
        "scrollLeft",
        "_setUpNativeDragAndDrop",
        "thumbnailListElement",
        "itemCurrentlyDragged",
        "CSS_CLASSES",
        "BEING_DRAGGED",
        "ACCEPTS_DROP",
        "dragStartListener",
        "target",
        "stopPropagation",
        "classList",
        "add",
        "dataTransfer",
        "effectAllowed",
        "dragEndListener",
        "remove",
        "dragOverListener",
        "preventDefault",
        "dropEffect",
        "dragEnterListener",
        "dragLeaveListener",
        "dropListener",
        "sourceImg",
        "targetImg",
        "targetImgUrl",
        "image",
        "ProjectionControlCtrl",
        "SUPPORTED_IMAGE_TYPES",
        "DYNAMIC_CSS_CLASSES",
        "DROP_DATA_SUPPORTED",
        "floatingAlerts",
        "showDropSupportedMessage",
        "$doCheck",
        "_isASupportedImageType",
        "MIMEType",
        "has",
        "mime",
        "getExtension",
        "_isDropDataSupported",
        "items",
        "itemsIdx",
        "isSupported",
        "item",
        "kind",
        "type",
        "_showDropSupportedMessage",
        "addClass",
        "_hideDropSupportedMessage",
        "removeClass",
        "_setUpDropBehaviour",
        "dragOverCounter",
        "dropEventListener",
        "addFileListToImagesForProjection",
        "files",
        "service",
        "ProjectionControlSvc",
        "svc",
        "EventEmitter",
        "dataToExpose",
        "serviceData",
        "Proxy",
        "set",
        "property",
        "Reflect",
        "arguments",
        "addImagesForProjection",
        "_fileListToImageForProjection",
        "Array",
        "from",
        "map",
        "objectFit",
        "result",
        "images",
        "push",
        "indexOfImageToRemove",
        "indexOf",
        "imageToRemove",
        "splice"
    ],
    "sourcesContent": [
        "angular.module( 'app.core', []);\n",
        "angular.module( 'app.projectionControl', [])\n\t.constant( 'SUPPORTED_IMAGE_TYPES', new Set([\n\t\t'apng',\n\t\t'bmp',\n\t\t'gif',\n\t\t'jpe',\n\t\t'jpeg',\n\t\t'jpg',\n\t\t'png',\n\t\t'webp',\n\t]));\n",
        "angular.module( 'app', [\n\t'ngSanitize',\n\n\t'app.core',\n\t'app.projectionControl',\n])\n\t.decorator( '$rootScope', function decorateRootScope( $delegate ) {\n\t\t$delegate.__proto__.safeApply = function safeApplyChange( expression ) {\n\t\t\tif ( $delegate.$$phase ) {\n\t\t\t\tthis.$evalAsync( expression );\n\t\t\t} else {\n\t\t\t\tthis.$apply( expression );\n\t\t\t}\n\t\t};\n\t\treturn $delegate;\n\t});\n",
        "angular.module( 'app.core' )\n\t.factory( 'ImageForProjection', [\n\n\t\tfunction ImageForProjectionModel(\n\t\t) {\n\n\t\t\tfunction equals( expected ) {\n\t\t\t\tconst actual = this;\n\t\t\t\tlet areEqual = actual.src === expected.src;\n\t\t\t\treturn areEqual;\n\t\t\t}\n\n\t\t\tfunction makeImageForProjection( file ) {\n\t\t\t\treturn {\n\t\t\t\t\tsrc: path.normalize( file.path ),\n\t\t\t\t\tpreset: null,\n\t\t\t\t\tequals,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn makeImageForProjection;\n\t\t}\n\t]);\n",
        "angular.module( 'app.projectionControl' )\n\t.component( 'configurationPanel', {\n\t\tcontroller: 'ConfigurationPanelController',\n\t\ttemplateUrl: 'projection-control/configuration-panel/configuration-panel.tpl.html',\n\t});\n",
        "angular.module( 'app.projectionControl' )\n\t.controller( 'ConfigurationPanelController', [\n\t\t'$scope',\n\t\t'ProjectionControlService',\n\n\t\tfunction ConfigurationPanelCtrl(\n\t\t\t$scope,\n\t\t\tProjectionControlService\n\t\t) {\n\t\t\tconst vm = this,\n\t\t\t\t{\n\t\t\t\t\tipcRenderer,\n\t\t\t\t} = electron;\n\n\t\t\tvm.isProjectionEnabled = false;\n\t\t\tvm.ctrlPnlSvcData = ProjectionControlService.data;\n\t\t\tvm.objectFitOptions = [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Contain',\n\t\t\t\t\tvalue: 'contain',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cover',\n\t\t\t\t\tvalue: 'cover',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Fill',\n\t\t\t\t\tvalue: 'fill',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Scale down',\n\t\t\t\t\tvalue: 'scale-down',\n\t\t\t\t},\n\t\t\t];\n\t\t\tvm.positionPresets = [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Centered',\n\t\t\t\t\tvalue: '50% 50%',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Center top',\n\t\t\t\t\tvalue: 'center top',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Advanced',\n\t\t\t\t\tvalue: 'custom',\n\t\t\t\t},\n\t\t\t];\n\t\t\tvm.objectFitPreset = vm.positionPresets[ 0 ];\n\n\t\t\tvm.toggleProjection = toggleProjection;\n\t\t\tvm.imagePositionPresetChanged = imagePositionPresetChanged;\n\n\t\t\tfunction toggleProjection() {\n\t\t\t\tipcRenderer.send( 'toggleProjection', vm.isProjectionEnabled );\n\n\t\t\t\tif ( vm.isProjectionEnabled ) {\n\t\t\t\t\tipcRenderer.once( 'projectionCanvasInitialized', () => {\n\t\t\t\t\t\tipcRenderer.send( 'setProjectedImage', ProjectionControlService.data.imageProjected );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction imagePositionPresetChanged() {\n\t\t\t\tconst {\n\t\t\t\t\tobjectFitPreset,\n\t\t\t\t\tpositionPresets,\n\t\t\t\t} = vm;\n\t\t\t\tif ( objectFitPreset !== positionPresets[ positionPresets.length - 1 ]) {\n\t\t\t\t\tProjectionControlService.data.imageProjected.objectPosition = objectFitPreset;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]);\n",
        "angular.module( 'app.projectionControl' )\n\t.component( 'imagePreview', {\n\t\tcontroller: 'ImagePreviewController',\n\t\ttemplateUrl: 'projection-control/image-preview/image-preview.tpl.html',\n\t});\n",
        "angular.module( 'app.projectionControl' )\n\t.controller( 'ImagePreviewController', [\n\t\t'$scope',\n\t\t'$element',\n\t\t'ProjectionControlService',\n\n\t\tfunction ImagePreviewCtrl(\n\t\t\t$scope,\n\t\t\t$element,\n\t\t\tProjectionControlService,\n\t\t) {\n\t\t\tconst vm = this,\n\t\t\t\t{\n\t\t\t\t\tipcRenderer,\n\t\t\t\t} = electron;\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tlet screenFrameElm = null;\n\n\t\t\tvm.$onInit = $onInit;\n\t\t\tvm.ctrlPnlSvcData = ProjectionControlService.data;\n\t\t\tvm.canvasHeight = null;\n\n\t\t\tfunction $onInit() {\n\t\t\t\tscreenFrameElm = $element[ 0 ].querySelector( '#screenFrame' );\n\t\t\t}\n\n\t\t\tfunction _handleCanvasDimensionChange( canvasDimensions ) {\n\t\t\t\tconst {\n\t\t\t\t\theight: originalHeight,\n\t\t\t\t\twidth: originalWidth,\n\t\t\t\t} = canvasDimensions;\n\t\t\t\t/**\n\t\t\t\t * Say you have a photo that is 1600 x 1200 pixels, but your blog only has space for a photo 400 pixels wide.\n\t\t\t\t * To find the new height of your photo—while preserving the aspect ratio—you would need to do the following calculation:\n\t\t\t\t * (original height / original width) x new width = new height\n\t\t\t\t */\n\t\t\t\tvm.canvasHeight = originalHeight / originalWidth * screenFrameElm.offsetWidth + 'px';\n\t\t\t\tvm.canvasWidth = originalWidth / originalHeight * screenFrameElm.offsetHeight + 'px';\n\t\t\t}\n\n\t\t\t$scope.$on( 'projectionCanvasDimensionChanged', _handleCanvasDimensionChange );\n\t\t\tipcRenderer.on( 'projectionCanvasInitialized', ( event, canvasDimensions ) => {\n\t\t\t\t$scope.safeApply(() => {\n\t\t\t\t\t_handleCanvasDimensionChange( canvasDimensions );\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t]);\n",
        "angular.module( 'app.projectionControl' )\n\t.component( 'imageThumbnails', {\n\t\tcontroller: 'ImageThumbnailsController',\n\t\ttemplateUrl: 'projection-control/image-thumbnails/image-thumbnails.tpl.html',\n\t});\n",
        "angular.module( 'app.projectionControl' )\n\t.controller( 'ImageThumbnailsController', [\n\t\t'$element',\n\t\t'ProjectionControlService',\n\n\t\tfunction ImageThumbnailsCtrl(\n\t\t\t$element,\n\t\t\tProjectionControlService,\n\t\t) {\n\t\t\tconst vm = this,\n\t\t\t\t/** @type {HTMLElement} */\n\t\t\t\telement = $element[ 0 ],\n\t\t\t\tprojectionCtrlSvc = ProjectionControlService.data;\n\n\t\t\tvm.imagesToProject = projectionCtrlSvc.imagesToProject;\n\t\t\tvm.$postLink = $postLink;\n\t\t\tvm.removeImageForProjection = ProjectionControlService.removeImageForProjection;\n\t\t\tvm.thumbnailClicked = thumbnailClicked;\n\n\t\t\tfunction _setUpScrollWheelHelper() {\n\t\t\t\t/** @type {HTMLElement} */\n\t\t\t\tlet scrollableAreaElement = element.querySelector( '#scrollableArea' );\n\t\t\t\tscrollableAreaElement.addEventListener( 'wheel', function wheelEventForElement( event ) {\n\t\t\t\t\tconst { deltaY } = event;\n\t\t\t\t\tif ( deltaY !== 0 ) {\n\t\t\t\t\t\tscrollableAreaElement.scrollLeft += deltaY;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction _setUpNativeDragAndDrop() {\n\t\t\t\t/** @type {HTMLElement} */\n\t\t\t\tlet thumbnailListElement = element.querySelector( '#thumbnailList' ),\n\t\t\t\t\titemCurrentlyDragged = null;\n\n\t\t\t\tconst CSS_CLASSES = {\n\t\t\t\t\tBEING_DRAGGED: 'is-dragged',\n\t\t\t\t\tACCEPTS_DROP: 'accepts-drop'\n\t\t\t\t};\n\n\t\t\t\tthumbnailListElement.addEventListener( 'dragstart', function dragStartListener( event ) {\n\t\t\t\t\tconst { target } = event;\n\t\t\t\t\titemCurrentlyDragged = target;\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\ttarget.classList.add( CSS_CLASSES.BEING_DRAGGED );\n\t\t\t\t\tevent.dataTransfer.effectAllowed = 'move';\n\t\t\t\t});\n\t\t\t\tthumbnailListElement.addEventListener( 'dragend', function dragEndListener( event ) {\n\t\t\t\t\titemCurrentlyDragged = null;\n\t\t\t\t\tconst { target } = event;\n\t\t\t\t\ttarget.classList.remove( CSS_CLASSES.BEING_DRAGGED );\n\t\t\t\t});\n\t\t\t\tthumbnailListElement.addEventListener( 'dragover', function dragOverListener( event ) {\n\t\t\t\t\tif ( event.target === itemCurrentlyDragged ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Required allow us to drop\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.dataTransfer.dropEffect = 'move';\n\t\t\t\t});\n\t\t\t\tthumbnailListElement.addEventListener( 'dragenter', function dragEnterListener( event ) {\n\t\t\t\t\tconst { target } = event;\n\t\t\t\t\tif ( target === itemCurrentlyDragged ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.classList.add( CSS_CLASSES.ACCEPTS_DROP );\n\t\t\t\t});\n\t\t\t\tthumbnailListElement.addEventListener( 'dragleave', function dragLeaveListener( event ) {\n\t\t\t\t\tlet { target } = event;\n\t\t\t\t\ttarget.classList.remove( CSS_CLASSES.ACCEPTS_DROP );\n\t\t\t\t});\n\t\t\t\tthumbnailListElement.addEventListener( 'drop', function dropListener( event ) {\n\t\t\t\t\tconst { target } = event;\n\n\t\t\t\t\tlet sourceImg = itemCurrentlyDragged.querySelector( 'img' ),\n\t\t\t\t\t\ttargetImg = target.querySelector( 'img' ),\n\t\t\t\t\t\ttargetImgUrl = targetImg.src;\n\n\t\t\t\t\t// interchange image urls\n\t\t\t\t\ttargetImg.src = sourceImg.src;\n\t\t\t\t\tsourceImg.src = targetImgUrl;\n\t\t\t\t\ttarget.classList.remove( CSS_CLASSES.ACCEPTS_DROP );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Called after this controller's element and its children have been linked. Similar to the post-link\n\t\t\t * function this hook can be used to set up DOM event handlers and do direct DOM manipulation.\n\t\t\t */\n\t\t\tfunction $postLink() {\n\t\t\t\t_setUpScrollWheelHelper();\n\t\t\t\t_setUpNativeDragAndDrop();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {ImageForProjection} image\n\t\t\t */\n\t\t\tfunction thumbnailClicked( image ) {\n\t\t\t\tprojectionCtrlSvc.imageProjected = image;\n\t\t\t}\n\t\t}\n\t]);\n",
        "angular.module( 'app.projectionControl' )\n\t.component( 'projectionControl', {\n\t\tcontroller: 'ProjectionControlController',\n\t\ttemplateUrl: 'projection-control/projection-control.tpl.html',\n\t});\n",
        "angular.module( 'app.projectionControl' )\n\t.controller( 'ProjectionControlController', [\n\t\t'$scope',\n\t\t'$element',\n\t\t'ProjectionControlService',\n\t\t'SUPPORTED_IMAGE_TYPES',\n\n\t\t/**\n\t\t * @param {jQuery} $element\n\t\t * @param {Set<string>} SUPPORTED_IMAGE_TYPES\n\t\t */\n\t\tfunction ProjectionControlCtrl(\n\t\t\t$scope,\n\t\t\t$element,\n\t\t\tProjectionControlService,\n\t\t\tSUPPORTED_IMAGE_TYPES,\n\t\t) {\n\t\t\tconst vm = this,\n\t\t\t\tDYNAMIC_CSS_CLASSES = {\n\t\t\t\t\tDROP_DATA_SUPPORTED: 'can-take-drop',\n\t\t\t\t};\n\t\t\t/**\n\t\t\t * Alert object definition\n\t\t\t * @typedef {Object} AlertMessage\n\t\t\t * @property {('success'|'info'|'warning'|'danger')} type\n\t\t\t * @property {boolean} [isDismissible=false]\n\t\t\t * @property {string} HTMLMessage\n\t\t\t */\n\n\t\t\t/** @type {AlertMessage[]} */\n\t\t\tlet floatingAlerts = [];\n\n\t\t\tvm.showDropSupportedMessage = false;\n\t\t\tvm.floatingAlerts = floatingAlerts;\n\t\t\tvm.$onInit = $onInit;\n\t\t\tvm.$doCheck = $doCheck;\n\n\t\t\t/**\n\t\t\t * @param {string} MIMEType\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tfunction _isASupportedImageType( MIMEType ) {\n\t\t\t\treturn SUPPORTED_IMAGE_TYPES.has( mime.getExtension( MIMEType ));\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {DataTransfer} dataTransfer\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tfunction _isDropDataSupported( dataTransfer ) {\n\t\t\t\tconst { items } = dataTransfer;\n\t\t\t\tlet itemsIdx = items.length,\n\t\t\t\t\tisSupported = itemsIdx > 0;\n\n\t\t\t\twhile (( itemsIdx-- > 0 ) && isSupported ) {\n\t\t\t\t\tconst item = items[ itemsIdx ];\n\t\t\t\t\tisSupported = item.kind === 'file' && _isASupportedImageType( item.type );\n\t\t\t\t}\n\n\t\t\t\treturn isSupported;\n\t\t\t}\n\n\t\t\tfunction _showDropSupportedMessage() {\n\t\t\t\tvm.showDropSupportedMessage = true;\n\t\t\t\t$element.addClass( DYNAMIC_CSS_CLASSES.DROP_DATA_SUPPORTED );\n\t\t\t}\n\n\t\t\tfunction _hideDropSupportedMessage() {\n\t\t\t\tvm.showDropSupportedMessage = false;\n\t\t\t\t$element.removeClass( DYNAMIC_CSS_CLASSES.DROP_DATA_SUPPORTED );\n\t\t\t}\n\n\t\t\tfunction _setUpDropBehaviour() {\n\t\t\t\tlet dragOverCounter = 0;\n\t\t\t\t$element\n\t\t\t\t\t.on( 'dragenter', function dragEnterListener( event ) {\n\t\t\t\t\t\t++dragOverCounter;\n\t\t\t\t\t\tconst { dataTransfer } = event;\n\t\t\t\t\t\tif ( _isDropDataSupported( dataTransfer )) {\n\t\t\t\t\t\t\t// Allow drop\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tdataTransfer.effectAllowed = dataTransfer.dropEffect = 'link';\n\t\t\t\t\t\t\t$scope.safeApply( _showDropSupportedMessage );\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on( 'dragover', function dragOverListener( event ) {\n\t\t\t\t\t\tconst { dataTransfer } = event;\n\t\t\t\t\t\tif ( _isDropDataSupported( dataTransfer )) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tdataTransfer.effectAllowed = dataTransfer.dropEffect = 'link';\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on( 'dragleave', function dragLeaveListener() {\n\t\t\t\t\t\t--dragOverCounter;\n\t\t\t\t\t\tif ( dragOverCounter === 0 ) {\n\t\t\t\t\t\t\t$scope.safeApply( _hideDropSupportedMessage );\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.on( 'drop', function dropEventListener( event ) {\n\t\t\t\t\t\t// Prevent browser from doing default behaviour\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tdragOverCounter = 0;\n\t\t\t\t\t\tconst { dataTransfer } = event;\n\t\t\t\t\t\tif ( _isDropDataSupported( dataTransfer )) {\n\t\t\t\t\t\t\t$scope.safeApply(() => {\n\t\t\t\t\t\t\t\t_hideDropSupportedMessage();\n\t\t\t\t\t\t\t\t// Process files dropped\n\t\t\t\t\t\t\t\tProjectionControlService.addFileListToImagesForProjection( dataTransfer.files );\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction $onInit() {\n\t\t\t\t_setUpDropBehaviour();\n\t\t\t}\n\n\t\t\tfunction $doCheck() {\n\n\t\t\t}\n\t\t}\n\t]);\n",
        "angular.module( 'app.projectionControl' )\n\t.service( 'ProjectionControlService', [\n\n\t\tfunction ProjectionControlSvc(\n\t\t) {\n\t\t\t/**\n\t\t\t * User interface image\n\t\t\t * @typedef {Object} ImageForProjection\n\t\t\t * @property {string} src\n\t\t\t * @property {('contain'|'cover'|'fill'|'none'|'scale-down')} objectFit\n\t\t\t * @property {string} objectPosition\n\t\t\t */\n\n\t\t\tconst svc = new EventEmitter(),\n\t\t\t\t{ ipcRenderer } = electron,\n\t\t\t\t/** @type {ImageForProjection[]} */\n\t\t\t\timagesToProject = [],\n\t\t\t\tdataToExpose = {\n\t\t\t\t\t/** @type {ImageForProjection} */\n\t\t\t\t\timageProjected: null,\n\t\t\t\t\timagesToProject,\n\t\t\t\t},\n\t\t\t\tserviceData = new Proxy( dataToExpose, {\n\t\t\t\t\tset( target, property, value ) {\n\t\t\t\t\t\tswitch ( property ) {\n\t\t\t\t\t\tcase 'imageProjected':\n\t\t\t\t\t\t\tipcRenderer.send( 'setProjectedImage', value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Return true to indicate that assignment succeeded.\n\t\t\t\t\t\treturn Reflect.set( ...arguments );\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tsvc.data = serviceData;\n\n\t\t\tsvc.addFileListToImagesForProjection = addFileListToImagesForProjection;\n\t\t\tsvc.addImagesForProjection = addImagesForProjection;\n\t\t\tsvc.removeImageForProjection = removeImageForProjection;\n\n\t\t\t/**\n\t\t\t * @param {FileList} files\n\t\t\t * @returns {ImageForProjection[]}\n\t\t\t */\n\t\t\tfunction _fileListToImageForProjection( files ) {\n\t\t\t\treturn Array.from( files )\n\t\t\t\t\t.map( file => {\n\t\t\t\t\t\treturn new Proxy({\n\t\t\t\t\t\t\tsrc: path.normalize( file.path ),\n\t\t\t\t\t\t\tobjectFit: 'contain',\n\t\t\t\t\t\t\tobjectPosition: '50% 50%',\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tset( target ) {\n\t\t\t\t\t\t\t\tlet result = Reflect.set( ...arguments );\n\t\t\t\t\t\t\t\tipcRenderer.send( 'setProjectedImage', target );\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {ImageForProjection[]} images\n\t\t\t */\n\t\t\tfunction addImagesForProjection( images ) {\n\t\t\t\t// TODO: check for duplicates\n\t\t\t\timagesToProject.push( ...images );\n\t\t\t\t// svc.emit( 'imagesProjectedChanged', imagesToProject );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {FileList} files\n\t\t\t */\n\t\t\tfunction addFileListToImagesForProjection( files ) {\n\t\t\t\tlet images = _fileListToImageForProjection( files );\n\t\t\t\taddImagesForProjection( images );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {ImageForProjection} image\n\t\t\t */\n\t\t\tfunction removeImageForProjection( image ) {\n\t\t\t\tlet indexOfImageToRemove = imagesToProject.indexOf( image );\n\t\t\t\tif ( indexOfImageToRemove > -1 ) {\n\t\t\t\t\tlet imageToRemove = imagesToProject[ indexOfImageToRemove ];\n\t\t\t\t\timagesToProject.splice( indexOfImageToRemove, 1 );\n\t\t\t\t\tif ( dataToExpose.imageProjected === imageToRemove ) {\n\t\t\t\t\t\tdataToExpose.imageProjected = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn svc;\n\t\t}\n\t]);\n"
    ],
    "mappings": "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"
}